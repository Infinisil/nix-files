#!/run/current-system/sw/bin/bash

set -eu -o pipefail

zip_file=rainloop-community-latest.zip
signature_file=$zip_file.asc
remote_webmail=https://www.rainloop.net/repository/webmail
local_webmail=/etc/user/http/webmail.pastespace.org

printf "RainLoop: checking for upgrades... "
new_zip_signature=$(curl -s "$remote_webmail/$signature_file" || true)
old_zip_signature=$(cat "$local_webmail/latest/$signature_file" || true)

if [ "x$new_zip_signature" == "x" ];
then
  echo "no internet"
  exit 0
fi

if [ "$new_zip_signature" != "$old_zip_signature" ];
then
  echo "found"
  echo "RainLoop: upgrading..."
  temp_dir=$(mktemp -d)
  pushd "$temp_dir"
    gpg2 --import <(curl -s "https://www.rainloop.net/repository/RainLoop.asc")

    # Download new version
    wget "$remote_webmail/$zip_file"
    gpg2 --verify <(echo "$new_zip_signature") "$zip_file"

    # Start from the latest, if it's there
    if [ -d "$local_webmail/latest" ];
    then
      rsync -av "$local_webmail/latest/" .
    fi

    unzip -o "$zip_file"
    rm "$zip_file"

    echo "$new_zip_signature" > "$signature_file"
  popd

  new_version=$(date +'version-%Y-%m-%d.%H:%M:%S')
  new_path=$local_webmail/$new_version
  if [ -d "$new_path" ];
  then
    echo "RainLoop: directory already exists: $new_path"
    exit 1
  fi

  # Move the new version into place and setup permissions
  mv "$temp_dir" "$new_path"
  find "$new_path" -type d -exec chmod 755 {} \;
  find "$new_path" -type f -exec chmod 644 {} \;
  chown -R http:users "$new_path"

  # Atomically link/upgrade
  ln -sfn "$new_path" "$local_webmail/latest"

  echo "Rainloop: upgrade complete"
else
  echo "not found"
fi
